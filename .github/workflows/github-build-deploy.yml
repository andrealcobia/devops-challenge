name: Build and Deploy

on:
  push:
    branches: [ "main" ]

env:
  ECR_REPOSITORY: aspnet-app

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    outputs:
      image_tag: ${{ steps.tag.outputs.image_tag }}
    steps:
      - uses: actions/checkout@v4
      
      - name: Install AWS CLI
        id: install-aws-cli
        uses: unfor19/install-aws-cli-action@v1
        with:
          version: 2
          verbose: true
          arch: arm64

      - name: Configure AWS
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/GitHubActionsCdkRole
          aws-region: eu-west-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Set IMAGE_TAG
        id: tag
        run: |
          IMAGE_TAG="$(date -u +%Y%m%dT%H%M%SZ)"
          echo "IMAGE_TAG=$IMAGE_TAG" >> "$GITHUB_ENV"
          echo "image_tag=$IMAGE_TAG" >> "$GITHUB_OUTPUT"
          echo "ðŸ“¦ Using image tag: $IMAGE_TAG"

      - name: Remove Tag from previous image
        id: remove_tag
        run: |
          aws ecr batch-delete-image --repository-name $ECR_REPOSITORY --image-ids imageTag=latest

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@v6
        with:
          push: true
          context: ./aspnetapp
          provenance: false
          platforms: linux/arm64
          tags: |
            ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }}   

  deploy:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Configure AWS
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/GitHubActionsCdkRole
          aws-region: eu-west-1

      - name: Install CDK and deps
        run: |
          npm install -g aws-cdk@latest
          npm ci || npm install
        working-directory: infrastructure

      - name: Synth
        run: cdk synth
        working-directory: infrastructure

      - name: Diff
        run: cdk diff
        working-directory: infrastructure

      - name: Deploy
        run: cdk deploy --require-approval never --all -c imageTag=${{ needs.build.outputs.image_tag }}
        working-directory: infrastructure
